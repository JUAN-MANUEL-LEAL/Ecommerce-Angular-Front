{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ExitGuard {\n  canDeactivate(component, currentRoute, currentState, nextState) {\n    const rta = confirm('¿Estas seguro de salir?');\n    return rta;\n  }\n}\nExitGuard.ɵfac = function ExitGuard_Factory(t) {\n  return new (t || ExitGuard)();\n};\nExitGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ExitGuard,\n  factory: ExitGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ExitGuard","canDeactivate","component","currentRoute","currentState","nextState","rta","confirm","factory","ɵfac","providedIn"],"sources":["/home/linuxmachine/personalProyects/Angular-router/src/app/guards/exit.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface OnExit {\n  onExit: () => Observable<boolean> | Promise<boolean> | boolean\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExitGuard implements CanDeactivate<unknown> {\n  canDeactivate(\n    component: OnExit,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const rta =  confirm('¿Estas seguro de salir?')\n    return rta;\n  }\n\n}\n"],"mappings":";AAWA,OAAM,MAAOA,SAAS;EACpBC,aAAaA,CACXC,SAAiB,EACjBC,YAAoC,EACpCC,YAAiC,EACjCC,SAA+B;IAC/B,MAAMC,GAAG,GAAIC,OAAO,CAAC,yBAAyB,CAAC;IAC/C,OAAOD,GAAG;EACZ;;AARWN,SAAS,C;mBAATA,SAAS;AAAA;AAATA,SAAS,C;SAATA,SAAS;EAAAQ,OAAA,EAATR,SAAS,CAAAS,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}