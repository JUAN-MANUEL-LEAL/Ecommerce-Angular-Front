{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CustomPreloadService {\n  constructor() {}\n  preload(route, load) {\n    if (route.data && route.data['preload']) {\n      return load();\n    }\n    return of(null);\n  }\n}\nCustomPreloadService.ɵfac = function CustomPreloadService_Factory(t) {\n  return new (t || CustomPreloadService)();\n};\nCustomPreloadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomPreloadService,\n  factory: CustomPreloadService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["of","CustomPreloadService","constructor","preload","route","load","data","factory","ɵfac","providedIn"],"sources":["/home/linuxmachine/personalProyects/Angular-router/src/app/services/custom-preload.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomPreloadService implements PreloadingStrategy {\n\n  constructor() { }\n\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\n    if (route.data && route.data['preload']) {\n      return load()\n    }\n    return of(null)\n  }\n}\n"],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;;AAKrC,OAAM,MAAOC,oBAAoB;EAE/BC,YAAA,GAAgB;EAEhBC,OAAOA,CAACC,KAAY,EAAEC,IAA2B;IAC/C,IAAID,KAAK,CAACE,IAAI,IAAIF,KAAK,CAACE,IAAI,CAAC,SAAS,CAAC,EAAE;MACvC,OAAOD,IAAI,EAAE;;IAEf,OAAOL,EAAE,CAAC,IAAI,CAAC;EACjB;;AATWC,oBAAoB,C;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB,C;SAApBA,oBAAoB;EAAAM,OAAA,EAApBN,oBAAoB,CAAAO,IAAA;EAAAC,UAAA,EAFnB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}