{"ast":null,"code":"import { Injectable, InjectionToken, NgZone, Directive, Inject, ElementRef, Optional, Input, NgModule } from '@angular/core';\nimport { Router, PRIMARY_OUTLET, RouterPreloader, RouterLink, RouterLinkWithHref } from '@angular/router';\nimport { EMPTY } from 'rxjs';\n\n// Using a global registry so we can keep it populated across lazy-loaded\n// modules with different parent injectors which create instance of the registry.\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\nconst globalRegistry = [];\nclass PrefetchRegistry {\n  constructor(router) {\n    this.router = router;\n    this.trees = globalRegistry;\n  }\n  add(tree) {\n    this.trees.push(tree);\n  }\n  shouldPrefetch(url) {\n    const tree = this.router.parseUrl(url);\n    return this.trees.some(containsTree.bind(null, tree));\n  }\n}\nPrefetchRegistry.ɵfac = function PrefetchRegistry_Factory(t) {\n  return new (t || PrefetchRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.Router));\n};\nPrefetchRegistry.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: PrefetchRegistry,\n  factory: PrefetchRegistry.ɵfac\n});\nPrefetchRegistry.ctorParameters = () => [{\n  type: Router\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PrefetchRegistry, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc1.Router\n    }];\n  }, null);\n})();\nfunction containsQueryParams(container, containee) {\n  // TODO: This does not handle array params correctly.\n  return Object.keys(containee).length <= Object.keys(container).length && Object.keys(containee).every(key => containee[key] === container[key]);\n}\nfunction containsTree(containee, container) {\n  return containsQueryParams(container.queryParams, containee.queryParams) && containsSegmentGroup(container.root, containee.root, containee.root.segments);\n}\nfunction containsSegmentGroup(container, containee, containeePaths) {\n  if (container.segments.length > containeePaths.length) {\n    const current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) return false;\n    if (containee.hasChildren()) return false;\n    return true;\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) return false;\n    if (!containee.hasChildren()) return true;\n    for (const c in containee.children) {\n      if (!container.children[c]) break;\n      if (containsSegmentGroup(container.children[c], containee.children[c], containee.children[c].segments)) return true;\n    }\n    return false;\n  } else {\n    const current = containeePaths.slice(0, container.segments.length);\n    const next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, current)) return false;\n    if (!container.children[PRIMARY_OUTLET]) return false;\n    return containsSegmentGroup(container.children[PRIMARY_OUTLET], containee, next);\n  }\n}\nfunction equalPath(as, bs) {\n  if (as.length !== bs.length) return false;\n  return as.every((a, i) => a.path === bs[i].path || a.path.startsWith(':') || bs[i].path.startsWith(':'));\n}\nconst ɵ0 = function (cb) {\n    const start = Date.now();\n    return setTimeout(function () {\n      cb({\n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start));\n        }\n      });\n    }, 1);\n  },\n  ɵ1 = () => {};\nconst requestIdleCallback = typeof window !== 'undefined' ? window.requestIdleCallback || ɵ0 : ɵ1;\nconst observerSupported = () => typeof window !== 'undefined' ? !!window.IntersectionObserver : false;\nconst ɵ2 = observerSupported;\nconst LinkHandler = new InjectionToken('LinkHandler');\nclass ObservableLinkHandler {\n  constructor(loader, registry, ngZone) {\n    this.loader = loader;\n    this.registry = registry;\n    this.ngZone = ngZone;\n    this.elementLink = new Map();\n    this.observer = observerSupported() ? new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const link = entry.target;\n          const routerLink = this.elementLink.get(link);\n          if (!routerLink || !routerLink.urlTree) return;\n          this.registry.add(routerLink.urlTree);\n          this.observer.unobserve(link);\n          requestIdleCallback(() => {\n            this.loader.preload().subscribe(() => void 0);\n          });\n        }\n      });\n    }) : null;\n  }\n  register(el) {\n    this.elementLink.set(el.element, el);\n    this.ngZone.runOutsideAngular(() => {\n      this.observer.observe(el.element);\n    });\n  }\n  // First call to unregister will not hit this.\n  unregister(el) {\n    if (this.elementLink.has(el.element)) {\n      this.observer.unobserve(el.element);\n      this.elementLink.delete(el.element);\n    }\n  }\n  supported() {\n    return observerSupported();\n  }\n}\nObservableLinkHandler.ɵfac = function ObservableLinkHandler_Factory(t) {\n  return new (t || ObservableLinkHandler)(ɵngcc0.ɵɵinject(ɵngcc1.RouterPreloader), ɵngcc0.ɵɵinject(PrefetchRegistry), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nObservableLinkHandler.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: ObservableLinkHandler,\n  factory: ObservableLinkHandler.ɵfac\n});\nObservableLinkHandler.ctorParameters = () => [{\n  type: RouterPreloader\n}, {\n  type: PrefetchRegistry\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ObservableLinkHandler, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc1.RouterPreloader\n    }, {\n      type: PrefetchRegistry\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\nclass PreloadLinkHandler {\n  constructor(loader, registry) {\n    this.loader = loader;\n    this.registry = registry;\n  }\n  register(el) {\n    this.registry.add(el.urlTree);\n    requestIdleCallback(() => this.loader.preload().subscribe(() => void 0));\n  }\n  unregister(_) {}\n  supported() {\n    return true;\n  }\n}\nPreloadLinkHandler.ɵfac = function PreloadLinkHandler_Factory(t) {\n  return new (t || PreloadLinkHandler)(ɵngcc0.ɵɵinject(ɵngcc1.RouterPreloader), ɵngcc0.ɵɵinject(PrefetchRegistry));\n};\nPreloadLinkHandler.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: PreloadLinkHandler,\n  factory: PreloadLinkHandler.ɵfac\n});\nPreloadLinkHandler.ctorParameters = () => [{\n  type: RouterPreloader\n}, {\n  type: PrefetchRegistry\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PreloadLinkHandler, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc1.RouterPreloader\n    }, {\n      type: PrefetchRegistry\n    }];\n  }, null);\n})();\nclass LinkDirective {\n  constructor(linkHandlers, el, link, linkWithHref) {\n    this.linkHandlers = linkHandlers;\n    this.el = el;\n    this.linkHandler = this.linkHandlers.filter(h => h.supported()).shift();\n    this.rl = link || linkWithHref;\n    if (this.element && this.element.setAttribute) {\n      this.element.setAttribute('ngx-ql', '');\n    }\n  }\n  ngOnChanges(c) {\n    if (c.routerLink) {\n      this.linkHandler.unregister(this);\n      this.linkHandler.register(this);\n    }\n  }\n  ngOnDestroy() {\n    this.linkHandler.unregister(this);\n  }\n  get element() {\n    return this.el.nativeElement;\n  }\n  get urlTree() {\n    return this.rl.urlTree;\n  }\n}\nLinkDirective.ɵfac = function LinkDirective_Factory(t) {\n  return new (t || LinkDirective)(ɵngcc0.ɵɵdirectiveInject(LinkHandler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RouterLink, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RouterLinkWithHref, 8));\n};\nLinkDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: LinkDirective,\n  selectors: [[\"\", \"routerLink\", \"\"]],\n  inputs: {\n    routerLink: \"routerLink\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nLinkDirective.ctorParameters = () => [{\n  type: Array,\n  decorators: [{\n    type: Inject,\n    args: [LinkHandler]\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: RouterLink,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: RouterLinkWithHref,\n  decorators: [{\n    type: Optional\n  }]\n}];\nLinkDirective.propDecorators = {\n  routerLink: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinkDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[routerLink]'\n    }]\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [LinkHandler]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.RouterLink,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc1.RouterLinkWithHref,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    routerLink: [{\n      type: Input\n    }]\n  });\n})();\nclass QuicklinkStrategy {\n  constructor(registry, router) {\n    this.registry = registry;\n    this.router = router;\n    this.loading = new Set();\n  }\n  preload(route, load) {\n    if (this.loading.has(route)) {\n      // Don't preload the same route twice\n      return EMPTY;\n    }\n    const conn = typeof navigator !== 'undefined' ? navigator.connection : undefined;\n    if (conn) {\n      // Don't preload if the user is on 2G. or if Save-Data is enabled..\n      if ((conn.effectiveType || '').includes('2g') || conn.saveData) return EMPTY;\n    }\n    // Prevent from preloading\n    if (route.data && route.data.preload === false) {\n      return EMPTY;\n    }\n    const fullPath = findPath(this.router.config, route);\n    if (this.registry.shouldPrefetch(fullPath)) {\n      this.loading.add(route);\n      return load();\n    }\n    return EMPTY;\n  }\n}\nQuicklinkStrategy.ɵfac = function QuicklinkStrategy_Factory(t) {\n  return new (t || QuicklinkStrategy)(ɵngcc0.ɵɵinject(PrefetchRegistry), ɵngcc0.ɵɵinject(ɵngcc1.Router));\n};\nQuicklinkStrategy.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: QuicklinkStrategy,\n  factory: QuicklinkStrategy.ɵfac\n});\nQuicklinkStrategy.ctorParameters = () => [{\n  type: PrefetchRegistry\n}, {\n  type: Router\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuicklinkStrategy, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: PrefetchRegistry\n    }, {\n      type: ɵngcc1.Router\n    }];\n  }, null);\n})();\nconst findPath = (config, route) => {\n  config = config.slice();\n  const parent = new Map();\n  const visited = new Set();\n  while (config.length) {\n    const el = config.shift();\n    visited.add(el);\n    if (el === route) break;\n    let children = el.children || [];\n    const current = el._loadedConfig;\n    if (current && current.routes) {\n      children = children.concat(current.routes);\n    }\n    children.forEach(r => {\n      if (visited.has(r)) return;\n      parent.set(r, el);\n      config.push(r);\n    });\n  }\n  let path = '';\n  let current = route;\n  while (current) {\n    if (isPrimaryRoute(current)) {\n      path = `/${current.path}${path}`;\n    } else {\n      path = `/(${current.outlet}:${current.path}${path})`;\n    }\n    current = parent.get(current);\n  }\n  return path.replace(/\\/\\//, '/');\n};\nconst ɵ0$1 = findPath;\nfunction isPrimaryRoute(route) {\n  return route.outlet === PRIMARY_OUTLET || !route.outlet;\n}\nclass QuicklinkModule {}\nQuicklinkModule.ɵfac = function QuicklinkModule_Factory(t) {\n  return new (t || QuicklinkModule)();\n};\nQuicklinkModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: QuicklinkModule\n});\nQuicklinkModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: LinkHandler,\n    useClass: ObservableLinkHandler,\n    multi: true\n  }, {\n    provide: LinkHandler,\n    useClass: PreloadLinkHandler,\n    multi: true\n  }, PrefetchRegistry, QuicklinkStrategy]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuicklinkModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [LinkDirective],\n      providers: [{\n        provide: LinkHandler,\n        useClass: ObservableLinkHandler,\n        multi: true\n      }, {\n        provide: LinkHandler,\n        useClass: PreloadLinkHandler,\n        multi: true\n      }, PrefetchRegistry, QuicklinkStrategy],\n      exports: [LinkDirective]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuicklinkModule, {\n    declarations: [LinkDirective],\n    exports: [LinkDirective]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QuicklinkModule, QuicklinkStrategy, LinkHandler as ɵa, ObservableLinkHandler as ɵb, PreloadLinkHandler as ɵc, PrefetchRegistry as ɵe, LinkDirective as ɵɵLinkDirective };","map":{"version":3,"names":["Injectable","InjectionToken","NgZone","Directive","Inject","ElementRef","Optional","Input","NgModule","Router","PRIMARY_OUTLET","RouterPreloader","RouterLink","RouterLinkWithHref","EMPTY","ɵngcc0","ɵngcc1","globalRegistry","PrefetchRegistry","constructor","router","trees","add","tree","push","shouldPrefetch","url","parseUrl","some","containsTree","bind","ɵfac","PrefetchRegistry_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ctorParameters","type","ngDevMode","ɵsetClassMetadata","containsQueryParams","container","containee","Object","keys","length","every","key","queryParams","containsSegmentGroup","root","segments","containeePaths","current","slice","equalPath","hasChildren","c","children","next","as","bs","a","i","path","startsWith","ɵ0","cb","start","Date","now","setTimeout","didTimeout","timeRemaining","Math","max","ɵ1","requestIdleCallback","window","observerSupported","IntersectionObserver","ɵ2","LinkHandler","ObservableLinkHandler","loader","registry","ngZone","elementLink","Map","observer","entries","forEach","entry","isIntersecting","link","target","routerLink","get","urlTree","unobserve","preload","subscribe","register","el","set","element","runOutsideAngular","observe","unregister","has","delete","supported","ObservableLinkHandler_Factory","PreloadLinkHandler","_","PreloadLinkHandler_Factory","LinkDirective","linkHandlers","linkWithHref","linkHandler","filter","h","shift","rl","setAttribute","ngOnChanges","ngOnDestroy","nativeElement","LinkDirective_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","inputs","features","ɵɵNgOnChangesFeature","Array","decorators","args","propDecorators","selector","QuicklinkStrategy","loading","Set","route","load","conn","navigator","connection","undefined","effectiveType","includes","saveData","data","fullPath","findPath","config","QuicklinkStrategy_Factory","parent","visited","_loadedConfig","routes","concat","r","isPrimaryRoute","outlet","replace","ɵ0$1","QuicklinkModule","QuicklinkModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","provide","useClass","multi","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵa","ɵb","ɵc","ɵe","ɵɵLinkDirective"],"sources":["/home/linuxmachine/personalProyects/Angular-router/node_modules/ngx-quicklink/__ivy_ngcc__/fesm2015/ngx-quicklink.js"],"sourcesContent":["import { Injectable, InjectionToken, NgZone, Directive, Inject, ElementRef, Optional, Input, NgModule } from '@angular/core';\nimport { Router, PRIMARY_OUTLET, RouterPreloader, RouterLink, RouterLinkWithHref } from '@angular/router';\nimport { EMPTY } from 'rxjs';\n\n// Using a global registry so we can keep it populated across lazy-loaded\n// modules with different parent injectors which create instance of the registry.\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\nconst globalRegistry = [];\nclass PrefetchRegistry {\n    constructor(router) {\n        this.router = router;\n        this.trees = globalRegistry;\n    }\n    add(tree) {\n        this.trees.push(tree);\n    }\n    shouldPrefetch(url) {\n        const tree = this.router.parseUrl(url);\n        return this.trees.some(containsTree.bind(null, tree));\n    }\n}\nPrefetchRegistry.ɵfac = function PrefetchRegistry_Factory(t) { return new (t || PrefetchRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.Router)); };\nPrefetchRegistry.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PrefetchRegistry, factory: PrefetchRegistry.ɵfac });\nPrefetchRegistry.ctorParameters = () => [\n    { type: Router }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PrefetchRegistry, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.Router }]; }, null); })();\nfunction containsQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return (Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(key => containee[key] === container[key]));\n}\nfunction containsTree(containee, container) {\n    return (containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root, containee.root.segments));\n}\nfunction containsSegmentGroup(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        const current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        if (!containee.hasChildren())\n            return true;\n        for (const c in containee.children) {\n            if (!container.children[c])\n                break;\n            if (containsSegmentGroup(container.children[c], containee.children[c], containee.children[c].segments))\n                return true;\n        }\n        return false;\n    }\n    else {\n        const current = containeePaths.slice(0, container.segments.length);\n        const next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroup(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every((a, i) => a.path === bs[i].path || a.path.startsWith(':') || bs[i].path.startsWith(':'));\n}\n\nconst ɵ0 = function (cb) {\n    const start = Date.now();\n    return setTimeout(function () {\n        cb({\n            didTimeout: false,\n            timeRemaining: function () {\n                return Math.max(0, 50 - (Date.now() - start));\n            }\n        });\n    }, 1);\n}, ɵ1 = () => { };\nconst requestIdleCallback = typeof window !== 'undefined'\n    ? window.requestIdleCallback || ɵ0\n    : ɵ1;\nconst observerSupported = () => typeof window !== 'undefined' ? !!window.IntersectionObserver : false;\nconst ɵ2 = observerSupported;\nconst LinkHandler = new InjectionToken('LinkHandler');\nclass ObservableLinkHandler {\n    constructor(loader, registry, ngZone) {\n        this.loader = loader;\n        this.registry = registry;\n        this.ngZone = ngZone;\n        this.elementLink = new Map();\n        this.observer = observerSupported()\n            ? new IntersectionObserver(entries => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        const link = entry.target;\n                        const routerLink = this.elementLink.get(link);\n                        if (!routerLink || !routerLink.urlTree)\n                            return;\n                        this.registry.add(routerLink.urlTree);\n                        this.observer.unobserve(link);\n                        requestIdleCallback(() => {\n                            this.loader.preload().subscribe(() => void 0);\n                        });\n                    }\n                });\n            })\n            : null;\n    }\n    register(el) {\n        this.elementLink.set(el.element, el);\n        this.ngZone.runOutsideAngular(() => {\n            this.observer.observe(el.element);\n        });\n    }\n    // First call to unregister will not hit this.\n    unregister(el) {\n        if (this.elementLink.has(el.element)) {\n            this.observer.unobserve(el.element);\n            this.elementLink.delete(el.element);\n        }\n    }\n    supported() {\n        return observerSupported();\n    }\n}\nObservableLinkHandler.ɵfac = function ObservableLinkHandler_Factory(t) { return new (t || ObservableLinkHandler)(ɵngcc0.ɵɵinject(ɵngcc1.RouterPreloader), ɵngcc0.ɵɵinject(PrefetchRegistry), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nObservableLinkHandler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ObservableLinkHandler, factory: ObservableLinkHandler.ɵfac });\nObservableLinkHandler.ctorParameters = () => [\n    { type: RouterPreloader },\n    { type: PrefetchRegistry },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ObservableLinkHandler, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.RouterPreloader }, { type: PrefetchRegistry }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass PreloadLinkHandler {\n    constructor(loader, registry) {\n        this.loader = loader;\n        this.registry = registry;\n    }\n    register(el) {\n        this.registry.add(el.urlTree);\n        requestIdleCallback(() => this.loader.preload().subscribe(() => void 0));\n    }\n    unregister(_) { }\n    supported() {\n        return true;\n    }\n}\nPreloadLinkHandler.ɵfac = function PreloadLinkHandler_Factory(t) { return new (t || PreloadLinkHandler)(ɵngcc0.ɵɵinject(ɵngcc1.RouterPreloader), ɵngcc0.ɵɵinject(PrefetchRegistry)); };\nPreloadLinkHandler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PreloadLinkHandler, factory: PreloadLinkHandler.ɵfac });\nPreloadLinkHandler.ctorParameters = () => [\n    { type: RouterPreloader },\n    { type: PrefetchRegistry }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PreloadLinkHandler, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.RouterPreloader }, { type: PrefetchRegistry }]; }, null); })();\n\nclass LinkDirective {\n    constructor(linkHandlers, el, link, linkWithHref) {\n        this.linkHandlers = linkHandlers;\n        this.el = el;\n        this.linkHandler = this.linkHandlers.filter(h => h.supported()).shift();\n        this.rl = link || linkWithHref;\n        if (this.element && this.element.setAttribute) {\n            this.element.setAttribute('ngx-ql', '');\n        }\n    }\n    ngOnChanges(c) {\n        if (c.routerLink) {\n            this.linkHandler.unregister(this);\n            this.linkHandler.register(this);\n        }\n    }\n    ngOnDestroy() {\n        this.linkHandler.unregister(this);\n    }\n    get element() {\n        return this.el.nativeElement;\n    }\n    get urlTree() {\n        return this.rl.urlTree;\n    }\n}\nLinkDirective.ɵfac = function LinkDirective_Factory(t) { return new (t || LinkDirective)(ɵngcc0.ɵɵdirectiveInject(LinkHandler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RouterLink, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RouterLinkWithHref, 8)); };\nLinkDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: LinkDirective, selectors: [[\"\", \"routerLink\", \"\"]], inputs: { routerLink: \"routerLink\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nLinkDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [LinkHandler,] }] },\n    { type: ElementRef },\n    { type: RouterLink, decorators: [{ type: Optional }] },\n    { type: RouterLinkWithHref, decorators: [{ type: Optional }] }\n];\nLinkDirective.propDecorators = {\n    routerLink: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinkDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[routerLink]'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Inject,\n                args: [LinkHandler]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.RouterLink, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.RouterLinkWithHref, decorators: [{\n                type: Optional\n            }] }]; }, { routerLink: [{\n            type: Input\n        }] }); })();\n\nclass QuicklinkStrategy {\n    constructor(registry, router) {\n        this.registry = registry;\n        this.router = router;\n        this.loading = new Set();\n    }\n    preload(route, load) {\n        if (this.loading.has(route)) {\n            // Don't preload the same route twice\n            return EMPTY;\n        }\n        const conn = typeof navigator !== 'undefined' ? navigator.connection : undefined;\n        if (conn) {\n            // Don't preload if the user is on 2G. or if Save-Data is enabled..\n            if ((conn.effectiveType || '').includes('2g') || conn.saveData)\n                return EMPTY;\n        }\n        // Prevent from preloading\n        if (route.data && route.data.preload === false) {\n            return EMPTY;\n        }\n        const fullPath = findPath(this.router.config, route);\n        if (this.registry.shouldPrefetch(fullPath)) {\n            this.loading.add(route);\n            return load();\n        }\n        return EMPTY;\n    }\n}\nQuicklinkStrategy.ɵfac = function QuicklinkStrategy_Factory(t) { return new (t || QuicklinkStrategy)(ɵngcc0.ɵɵinject(PrefetchRegistry), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };\nQuicklinkStrategy.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: QuicklinkStrategy, factory: QuicklinkStrategy.ɵfac });\nQuicklinkStrategy.ctorParameters = () => [\n    { type: PrefetchRegistry },\n    { type: Router }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuicklinkStrategy, [{\n        type: Injectable\n    }], function () { return [{ type: PrefetchRegistry }, { type: ɵngcc1.Router }]; }, null); })();\nconst findPath = (config, route) => {\n    config = config.slice();\n    const parent = new Map();\n    const visited = new Set();\n    while (config.length) {\n        const el = config.shift();\n        visited.add(el);\n        if (el === route)\n            break;\n        let children = el.children || [];\n        const current = el._loadedConfig;\n        if (current && current.routes) {\n            children = children.concat(current.routes);\n        }\n        children.forEach((r) => {\n            if (visited.has(r))\n                return;\n            parent.set(r, el);\n            config.push(r);\n        });\n    }\n    let path = '';\n    let current = route;\n    while (current) {\n        if (isPrimaryRoute(current)) {\n            path = `/${current.path}${path}`;\n        }\n        else {\n            path = `/(${current.outlet}:${current.path}${path})`;\n        }\n        current = parent.get(current);\n    }\n    return path.replace(/\\/\\//, '/');\n};\nconst ɵ0$1 = findPath;\nfunction isPrimaryRoute(route) {\n    return route.outlet === PRIMARY_OUTLET || !route.outlet;\n}\n\nclass QuicklinkModule {\n}\nQuicklinkModule.ɵfac = function QuicklinkModule_Factory(t) { return new (t || QuicklinkModule)(); };\nQuicklinkModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: QuicklinkModule });\nQuicklinkModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        {\n            provide: LinkHandler,\n            useClass: ObservableLinkHandler,\n            multi: true\n        },\n        {\n            provide: LinkHandler,\n            useClass: PreloadLinkHandler,\n            multi: true\n        },\n        PrefetchRegistry,\n        QuicklinkStrategy\n    ] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuicklinkModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [LinkDirective],\n                providers: [\n                    {\n                        provide: LinkHandler,\n                        useClass: ObservableLinkHandler,\n                        multi: true\n                    },\n                    {\n                        provide: LinkHandler,\n                        useClass: PreloadLinkHandler,\n                        multi: true\n                    },\n                    PrefetchRegistry,\n                    QuicklinkStrategy\n                ],\n                exports: [LinkDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuicklinkModule, { declarations: [LinkDirective], exports: [LinkDirective] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QuicklinkModule, QuicklinkStrategy, LinkHandler as ɵa, ObservableLinkHandler as ɵb, PreloadLinkHandler as ɵc, PrefetchRegistry as ɵe, LinkDirective as ɵɵLinkDirective };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}