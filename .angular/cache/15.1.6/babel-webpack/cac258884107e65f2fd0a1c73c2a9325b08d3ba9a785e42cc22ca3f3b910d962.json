{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/token.service\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(tokenService, authService, router) {\n    this.tokenService = tokenService;\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    // const token =  this.tokenService.getToken()\n    //   if(!token) {\n    //     this.router.navigate(['/home'])\n    //     return false\n    //   }\n    // return true;\n    return this.authService.user$.pipe(map(user => {\n      if (!user) {\n        this.router.navigate(['home']);\n        return false;\n      }\n      return true;\n    }));\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.TokenService), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i3.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","AuthGuard","constructor","tokenService","authService","router","canActivate","route","state","user$","pipe","user","navigate","i0","ɵɵinject","i1","TokenService","i2","AuthService","i3","Router","factory","ɵfac","providedIn"],"sources":["/home/linuxmachine/personalProyects/Angular-router/src/app/guards/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs';\n\nimport { TokenService } from '../services/token.service';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor (\n    private tokenService: TokenService,\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    // const token =  this.tokenService.getToken()\n    //   if(!token) {\n    //     this.router.navigate(['/home'])\n    //     return false\n    //   }\n    // return true;\n    return this.authService.user$\n    .pipe(\n      map(user => {\n        if(!user){\n          this.router.navigate(['home'])\n          return false\n        }\n        return true\n      })\n    )\n  }\n\n}\n"],"mappings":"AAIA,SAASA,GAAG,QAAQ,MAAM;;;;;AAQ1B,OAAM,MAAOC,SAAS;EAEpBC,YACUC,YAA0B,EAC1BC,WAAwB,EACxBC,MAAc;IAFd,KAAAF,YAAY,GAAZA,YAAY;IACZ,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACd;EAEFC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,IAAI,CAACJ,WAAW,CAACK,KAAK,CAC5BC,IAAI,CACHV,GAAG,CAACW,IAAI,IAAG;MACT,IAAG,CAACA,IAAI,EAAC;QACP,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;QAC9B,OAAO,KAAK;;MAEd,OAAO,IAAI;IACb,CAAC,CAAC,CACH;EACH;;AA3BWX,SAAS,C;mBAATA,SAAS,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;AAAA;AAATnB,SAAS,C;SAATA,SAAS;EAAAoB,OAAA,EAATpB,SAAS,CAAAqB,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}