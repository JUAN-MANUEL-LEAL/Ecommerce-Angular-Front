{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/token.service\";\nexport class AuthGuard {\n  constructor(tokenService) {\n    this.tokenService = tokenService;\n  }\n  canActivate(route, state) {\n    const token = this.tokenService.getToken();\n    return token ? true : false;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.TokenService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","tokenService","canActivate","route","state","token","getToken","i0","ɵɵinject","i1","TokenService","factory","ɵfac","providedIn"],"sources":["/home/linuxmachine/personalProyects/Angular-router/src/app/guards/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { TokenService } from '../services/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor (\n    private tokenService: TokenService\n  ){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const token =  this.tokenService.getToken()\n    return token ? true : false;\n  }\n\n}\n"],"mappings":";;AASA,OAAM,MAAOA,SAAS;EAEpBC,YACUC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;EACpB;EAEFC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,MAAMC,KAAK,GAAI,IAAI,CAACJ,YAAY,CAACK,QAAQ,EAAE;IAC3C,OAAOD,KAAK,GAAG,IAAI,GAAG,KAAK;EAC7B;;AAXWN,SAAS,C;mBAATA,SAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAATX,SAAS,C;SAATA,SAAS;EAAAY,OAAA,EAATZ,SAAS,CAAAa,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}