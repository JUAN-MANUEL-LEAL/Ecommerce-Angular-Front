{"ast":null,"code":"import { switchMap, tap } from 'rxjs/operators';\nimport { environment } from './../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../services/token.service\";\nexport class AuthService {\n  constructor(http, tokenService) {\n    this.http = http;\n    this.tokenService = tokenService;\n    this.apiUrl = `${environment.API_URL}/api/auth`;\n  }\n  login(email, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      email,\n      password\n    }).pipe(tap(response => this.tokenService.saveToken(response.access_token)));\n  }\n  getProfile() {\n    return this.http.get(`${this.apiUrl}/profile`);\n  }\n  loginAndGet(email, password) {\n    return this.login(email, password).pipe(switchMap(() => this.getProfile()));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["switchMap","tap","environment","AuthService","constructor","http","tokenService","apiUrl","API_URL","login","email","password","post","pipe","response","saveToken","access_token","getProfile","get","loginAndGet","i0","ɵɵinject","i1","HttpClient","i2","TokenService","factory","ɵfac","providedIn"],"sources":["/home/linuxmachine/personalProyects/Angular-router/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { switchMap, tap } from 'rxjs/operators';\n\nimport { environment } from './../../environments/environment';\nimport { Auth } from './../models/auth.model';\nimport { User } from './../models/user.model';\nimport { TokenService } from './../services/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private apiUrl = `${environment.API_URL}/api/auth`;\n\n  constructor(\n    private http: HttpClient,\n    private tokenService: TokenService\n  ) { }\n\n  login(email: string, password: string) {\n    return this.http.post<Auth>(`${this.apiUrl}/login`, {email, password})\n    .pipe(\n      tap(response => this.tokenService.saveToken(response.access_token))\n    );\n  }\n\n  getProfile() {\n    return this.http.get<User>(`${this.apiUrl}/profile`);\n  }\n\n  loginAndGet(email: string, password: string) {\n    return this.login(email, password)\n    .pipe(\n      switchMap(() => this.getProfile()),\n    )\n  }\n}\n"],"mappings":"AAEA,SAASA,SAAS,EAAEC,GAAG,QAAQ,gBAAgB;AAE/C,SAASC,WAAW,QAAQ,kCAAkC;;;;AAQ9D,OAAM,MAAOC,WAAW;EAItBC,YACUC,IAAgB,EAChBC,YAA0B;IAD1B,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,YAAY,GAAZA,YAAY;IAJd,KAAAC,MAAM,GAAG,GAAGL,WAAW,CAACM,OAAO,WAAW;EAK9C;EAEJC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAO,GAAG,IAAI,CAACL,MAAM,QAAQ,EAAE;MAACG,KAAK;MAAEC;IAAQ,CAAC,CAAC,CACrEE,IAAI,CACHZ,GAAG,CAACa,QAAQ,IAAI,IAAI,CAACR,YAAY,CAACS,SAAS,CAACD,QAAQ,CAACE,YAAY,CAAC,CAAC,CACpE;EACH;EAEAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAO,GAAG,IAAI,CAACX,MAAM,UAAU,CAAC;EACtD;EAEAY,WAAWA,CAACT,KAAa,EAAEC,QAAgB;IACzC,OAAO,IAAI,CAACF,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,CACjCE,IAAI,CACHb,SAAS,CAAC,MAAM,IAAI,CAACiB,UAAU,EAAE,CAAC,CACnC;EACH;;AAzBWd,WAAW,C;mBAAXA,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;AAAA;AAAXtB,WAAW,C;SAAXA,WAAW;EAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}